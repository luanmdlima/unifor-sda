vendor_name = ModelSim
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/adder.vhd
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/registrator.vhd
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/comparator.vhd
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/operational.bdf
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/operational.vwf
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/control.smf
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/system.bdf
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/system.vwf
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/control.vwf
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/controller.smf
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/system_2.bdf
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/system_2.vwf
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/db/vending_machine.cbx.xml
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/13.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, C:/Users/luanm/workspace/unifor/sda/av3/vending_machine/controller.vhd
design_name = system_2
instance = comp, \d~output , d~output, system_2, 1
instance = comp, \reset~input , reset~input, system_2, 1
instance = comp, \clock~input , clock~input, system_2, 1
instance = comp, \s[7]~input , s[7]~input, system_2, 1
instance = comp, \inst1|reg_fstate.begining~0 , inst1|reg_fstate.begining~0, system_2, 1
instance = comp, \inst1|fstate.begining , inst1|fstate.begining, system_2, 1
instance = comp, \inst1|tot_clr~0 , inst1|tot_clr~0, system_2, 1
instance = comp, \c~input , c~input, system_2, 1
instance = comp, \inst1|reg_fstate.add~0 , inst1|reg_fstate.add~0, system_2, 1
instance = comp, \inst1|fstate.add , inst1|fstate.add, system_2, 1
instance = comp, \inst1|tot_ld~0 , inst1|tot_ld~0, system_2, 1
instance = comp, \inst2|inst2|totalS[7] , inst2|inst2|totalS[7], system_2, 1
instance = comp, \a[7]~input , a[7]~input, system_2, 1
instance = comp, \a[6]~input , a[6]~input, system_2, 1
instance = comp, \a[5]~input , a[5]~input, system_2, 1
instance = comp, \a[4]~input , a[4]~input, system_2, 1
instance = comp, \a[3]~input , a[3]~input, system_2, 1
instance = comp, \a[2]~input , a[2]~input, system_2, 1
instance = comp, \a[1]~input , a[1]~input, system_2, 1
instance = comp, \a[0]~input , a[0]~input, system_2, 1
instance = comp, \inst2|inst3|totalR[0]~0 , inst2|inst3|totalR[0]~0, system_2, 1
instance = comp, \inst2|inst2|totalS[0] , inst2|inst2|totalS[0], system_2, 1
instance = comp, \inst2|inst3|totalR[1]~2 , inst2|inst3|totalR[1]~2, system_2, 1
instance = comp, \inst2|inst2|totalS[1] , inst2|inst2|totalS[1], system_2, 1
instance = comp, \inst2|inst3|totalR[2]~4 , inst2|inst3|totalR[2]~4, system_2, 1
instance = comp, \inst2|inst2|totalS[2] , inst2|inst2|totalS[2], system_2, 1
instance = comp, \inst2|inst3|totalR[3]~6 , inst2|inst3|totalR[3]~6, system_2, 1
instance = comp, \inst2|inst2|totalS[3] , inst2|inst2|totalS[3], system_2, 1
instance = comp, \inst2|inst3|totalR[4]~8 , inst2|inst3|totalR[4]~8, system_2, 1
instance = comp, \inst2|inst2|totalS[4] , inst2|inst2|totalS[4], system_2, 1
instance = comp, \inst2|inst3|totalR[5]~10 , inst2|inst3|totalR[5]~10, system_2, 1
instance = comp, \inst2|inst2|totalS[5] , inst2|inst2|totalS[5], system_2, 1
instance = comp, \inst2|inst3|totalR[6]~12 , inst2|inst3|totalR[6]~12, system_2, 1
instance = comp, \inst2|inst2|totalS[6] , inst2|inst2|totalS[6], system_2, 1
instance = comp, \inst2|inst3|totalR[7]~14 , inst2|inst3|totalR[7]~14, system_2, 1
instance = comp, \inst2|inst2|totalC[7] , inst2|inst2|totalC[7], system_2, 1
instance = comp, \s[6]~input , s[6]~input, system_2, 1
instance = comp, \inst2|inst2|totalC[6] , inst2|inst2|totalC[6], system_2, 1
instance = comp, \s[5]~input , s[5]~input, system_2, 1
instance = comp, \inst2|inst2|totalC[5] , inst2|inst2|totalC[5], system_2, 1
instance = comp, \s[4]~input , s[4]~input, system_2, 1
instance = comp, \inst2|inst2|totalC[4] , inst2|inst2|totalC[4], system_2, 1
instance = comp, \s[3]~input , s[3]~input, system_2, 1
instance = comp, \inst2|inst2|totalC[3] , inst2|inst2|totalC[3], system_2, 1
instance = comp, \s[2]~input , s[2]~input, system_2, 1
instance = comp, \inst2|inst2|totalC[2] , inst2|inst2|totalC[2], system_2, 1
instance = comp, \s[1]~input , s[1]~input, system_2, 1
instance = comp, \inst2|inst2|totalC[1] , inst2|inst2|totalC[1], system_2, 1
instance = comp, \s[0]~input , s[0]~input, system_2, 1
instance = comp, \inst2|inst2|totalC[0] , inst2|inst2|totalC[0], system_2, 1
instance = comp, \inst2|inst|LessThan0~1 , inst2|inst|LessThan0~1, system_2, 1
instance = comp, \inst2|inst|LessThan0~3 , inst2|inst|LessThan0~3, system_2, 1
instance = comp, \inst2|inst|LessThan0~5 , inst2|inst|LessThan0~5, system_2, 1
instance = comp, \inst2|inst|LessThan0~7 , inst2|inst|LessThan0~7, system_2, 1
instance = comp, \inst2|inst|LessThan0~9 , inst2|inst|LessThan0~9, system_2, 1
instance = comp, \inst2|inst|LessThan0~11 , inst2|inst|LessThan0~11, system_2, 1
instance = comp, \inst2|inst|LessThan0~13 , inst2|inst|LessThan0~13, system_2, 1
instance = comp, \inst2|inst|LessThan0~14 , inst2|inst|LessThan0~14, system_2, 1
instance = comp, \inst1|reg_fstate.wait_not_c~0 , inst1|reg_fstate.wait_not_c~0, system_2, 1
instance = comp, \inst1|fstate.wait_not_c , inst1|fstate.wait_not_c, system_2, 1
instance = comp, \inst1|reg_fstate.waiting~3 , inst1|reg_fstate.waiting~3, system_2, 1
instance = comp, \inst1|reg_fstate.waiting~12 , inst1|reg_fstate.waiting~12, system_2, 1
instance = comp, \inst1|fstate.waiting , inst1|fstate.waiting, system_2, 1
instance = comp, \inst1|reg_fstate.provide~2 , inst1|reg_fstate.provide~2, system_2, 1
instance = comp, \inst1|fstate.provide , inst1|fstate.provide, system_2, 1
instance = comp, \inst1|d~0 , inst1|d~0, system_2, 1
